#ifndef EMPRESA_H_INCLUDED
#define EMPRESA_H_INCLUDED
//PRE:
//POST: SE CREA LA STRUCT EmpresaE CON LOS TIPOS DE DATO DENTRO
struct EmpresaE;
//PRE: DEBE HABERSE CREADO LA STRUCT CORRESPONDIENTE
//POST: SE DEFINE UN TIPO DE DATO struct EmpresaE Y EL PUNTERO QUE SEÑALA A LA MIMSA
typedef struct EmpresaE * Empresa;
//PRE:SE DEFINIIO EL TIPO DE DATO Empresa COMO PUNTERO QUE SEÑALA A LA STRUCT
//POST: SE CREAN LOS DATOS ACCEDIENDO A LA STRUCT, Y LOS EMPLEADOS SIN BASURA
Empresa crearEmpresa();
//PRE:LAS STRUCT EMPRESA Y EMPLEADO DEBEN ESTAR ANIDADAS POR TDA. LOS PARAMETROS SE CORRESPONDEN
//CON LA STRUCT ANIDADA Empleado
//POST:SE AGREGA UN EMPLEADO A LA EMPRESA.
void agregarEmpleado(Empresa em, char nom[], char ape[], int ed);
//PRE:IDEM
//POST:SE ELIMINARA AL EMPLEADO CARGADO EN LA POSICION 0 DEL ARRAY Empleado empleados[], DE LA STRUCT EMPRESA
void eliminarEmpleado(Empresa em, int ed);
//PRE:LA STRUCT FUE CARGADA
//POST:SE MUESTRA LA EMPRESA CON SUS EMPLEADOS
void mostrarEmpresa(Empresa e);
//PRE:EL ORDENAMIENTO SE HIZO EN LA FUNCIÓN ordenarEmpleadosPorSueldo(Empleado e[]) DE empleados.h
//POST:SE MUESTRA A LOS EMPLEADOS ORDENADOS POR SUELDO
void mostrarOrdenamientoPorSueldo(Empresa em);
#endif // EMPRESA_H_INCLUDED
